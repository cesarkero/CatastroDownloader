#' catastrozip2st
#'
#' @param ziplink
#' @param tempfolder
#'
#' @description
#' # catastrozip2st downloads a zip link into a temporal folder and extracts:
# - building.gml
# - buildingpart.gml
# - otherconstruction.gml
# It returns a list of 3 elements, each in st format
# Note1: it includes the calculation of Hmax heigth for buildingparts
#' @return list of 3 elemenst (building, buildingpart, otherconstruction)
#' #'
#' @examples
#' \dontrun{
#'
#' }
catastrozip2st <- function(ziplink, tempfolder = "./temp/Ourense/", name, Hfloor =3){

        # download temporal file
        tempzip <- paste0(tempfolder, "temp.zip")

        # WINDOWS ERROR USING LINKS WITH Ã‘ --> RESOLVE
        download.file(URLencode(ziplink), destfile = tempzip, method = "auto")

        # find filename for buildingpart and building
        ns <- unzip(tempzip, list=TRUE)$Name
        bn <- ns[grepl("*building.gml", ns)]
        bpn <- ns[grepl("*buildingpart.gml", ns)]
        ocn <- ns[grepl("*construction.gml", ns)]

        # extract building, buildingpart and otherconstruction
        # the folder of extraction must be without last /
        utils::unzip(tempzip, exdir = gsub('.{1}$','',tempfolder), bn)
        utils::unzip(tempzip, exdir = gsub('.{1}$','',tempfolder), bpn)
        utils::unzip(tempzip, exdir = gsub('.{1}$','',tempfolder), ocn)

        # read files as st (NA if .gml is not right)
        b1 <- tryCatch(st_read(paste0(tempfolder, bn)), error=function(err) NA)
        b2 <- tryCatch(st_read(paste0(tempfolder, bpn)), error=function(err) NA)
        b3 <- tryCatch(st_read(paste0(tempfolder, ocn)), error=function(err) NA)

        #---------------------------------------------------------------------------
        # Add atributes to identify source
        #---------------------------------------------------------------------------
        # Add Hmax to buildingpart based on floors above ground (Hfloor m)
        if (!is.null(dim(b1))){b2 <- mutate(b2, Hmax = numberOfFloorsAboveGround*Hfloor)}

        #---------------------------------------------------------------------------
        # Add name if value is not NA
        l <- lapply(list(b1,b2,b3), function(x) if(!is.null(dim(x))){mutate(x, name = name)})

        #---------------------------------------------------------------------------
        # remove temporal files
        unlink(paste0(tempfolder,"*"), recursive = TRUE)

        return(l)
}
