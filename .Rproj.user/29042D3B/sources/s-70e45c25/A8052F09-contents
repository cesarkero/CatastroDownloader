% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/IterativeSteinerTree.R
\name{IterativeSteinerTree}
\alias{IterativeSteinerTree}
\title{IterativeSteinerTree}
\usage{
IterativeSteinerTree(
  l,
  p,
  th = 1000,
  iterations = 1,
  samples = 0,
  clean = TRUE,
  rpushbullet = FALSE
)
}
\arguments{
\item{l}{SLDF}

\item{p}{SPDF}

\item{th}{threshold to connect points to lines}

\item{iterations}{number of iterations of Steiner Trees (0/1 to make just one ST)}

\item{samples}{number of samples from SPDF in each iteration (0/1 to use full SPDF)}

\item{clean}{if TRUE, lines will be previously cleaned (using CleanLines())
Even this CleanLines is already implemented within the SteinerTree(), here
it will be executed independently to get a perfect lines layer from the begining
and avoid cleaning in each iteration.}

\item{rpushbullet}{FALSE by default. Use TRUE just if you have it previously configured.
This allows yo to go have a coffe while Steiner Tree is calculated. You will receive
a notification with the minutes of processing and final length.}
}
\value{
List of four items: (1) Merged Steiner Tree of all iterations; (2)
Total Steiner Tree from Merged Steiner Trees and points; (3) length of the Total
Steiner Tree; (4) Time of processing in mins
}
\description{
This algorithm will perform parametric Steiner Trees based on the iterations
and samples (of points). The goal (not ready yet is to iterate in parallel).
By now, this work sequentially. In each iteration, an Steiner Tree is calculated
using a SLDF an a SPDF, which would be sampled, in each iteration, by a given
number. After all iterations have been performed, a dissolved network of the partials
steiner trees will be created in order to do a last final complete Steiner tree.
This process allows, by sampling and iterating several times, to get the
main network and remove all those patch, terminals and other lines that are not
usefull and add noise to calculations.
}
\examples{
\dontrun{
data("l"); data("p")
setGRASS()
IST <- IterativeSteinerTree(l, p, 1000, 3, samples = 10, clean = TRUE, rpushbullet=FALSE)
}
}
